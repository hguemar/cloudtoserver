#!/usr/bin/env python

# Copyright 2014  Red Hat, Inc.
#
# This copyrighted material is made available to anyone wishing to use,
# modify, copy, or redistribute it subject to the terms and conditions
# of the GNU General Public License v.2, or (at your option) any later
# version.  This program is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.  You
# should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# Any Red Hat trademarks that are incorporated in the source
# code or documentation are not subject to the GNU General Public
# License and may only be used or replicated with the express permission
# of Red Hat, Inc.
#
# Author: Kushal Das <kdas@redhat.com>


import os
import sys
import argparse
import yum
from yum.Errors import InstallError

# FIXME: should be a configuration file
INSTALL_PKGS = ['fedora-release-server', 'firewalld-config-server']
REMOVE_PKGS = ['fedora-release-cloud', 'firewalld-config-standard']
SERVER_ENV = '@^server-product-environment'

def convert_to_server():
    """This function tries to run a series of yum commands
to convert a Fedora cloud instance into a Fedora server instance.
    """
    yb = yum.YumBase()
    try:
        for pkg in INSTALL_PKGS:
            yb.install(name=pkg)
        for pkg in REMOVE_PKGS:
            yb.remove(name=pkg)
        yb.install(pattern=SERVER_ENV)
        yb.resolveDeps()
        yb.processTransaction()
    except InstallError as err:
        print "There was issues while converting to Fedora Server. Please report the error"
        print "Use https://paste.fedoraproject.org for pasting the output from this command."

def main():
    """
    Main function of the script.
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("-s", "--stopci", help="Stop cloud-init service",
                        action="store_true")
    args = parser.parse_args()
    # First let us give some warning to the user.
    print "This will try to convert your Fedora cloud instance to a Fedora Server instance."
    while True:
        inp = raw_input("Continue? y/N: ")
        inp = inp.strip().lower()
        if inp == 'n':
            return
        if inp == 'y':
            break
    # Now the normal flow of the application
    convert_to_server()
    if args.stopci:
        print "Disabling cloud-init service on reboot."
        cmd = "systemctl disable cloud-init.service"
        os.system(cmd)


if __name__ == '__main__':
    main()
